name: Continuous Integration
on:
  push:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  cpplint:
    name: CPP Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          show-progress: false
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - run: pip install cpplint
      - run: cpplint --linelength 140 --filter=-legal/copyright,-runtime/int,-build/include_subdir,-readability/casting,-readability/todo,-build/include_order,-build/include_what_you_use --recursive ./inc/ ./lib/ ./src/

  pio-test:
    name: PlatformIO Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          persist-credentials: true
          show-progress: false
      - name: Setup Git Credentials
        run: |
          git config --global credential.helper store
          echo "https://oauth2:${{ secrets.GH_TOKEN }}@github.com" > ~/.git-credentials
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Install Platform IO
        run: |
          python -m pip install --upgrade pip
          pip install -U platformio
      - name: Run Unit Tests
        run: platformio test -e native-test

  pio-build:
    name: PlatformIO Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          token: ${{ secrets.GH_TOKEN }}
          persist-credentials: true
          show-progress: false
      - name: Setup Git Credentials
        run: |
          git config --global credential.helper store
          echo "https://oauth2:${{ secrets.GH_TOKEN }}@github.com" > ~/.git-credentials
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Install Platform IO
        run: |
          python -m pip install --upgrade pip
          pip install -U platformio
      - name: Build ESP32S3
        run: platformio run -e OpenPPG-CESP32S3-CAN-SP140
      - name: Install esptool
        run: pip install esptool
      - name: Merge Binaries
        run: |
          esptool.py --chip esp32s3 merge_bin \
            -o .pio/build/OpenPPG-CESP32S3-CAN-SP140/full-controller-firmware.bin \
            --flash_mode dio \
            --flash_freq 80m \
            --flash_size 8MB \
            0x0 .pio/build/OpenPPG-CESP32S3-CAN-SP140/bootloader.bin \
            0x8000 .pio/build/OpenPPG-CESP32S3-CAN-SP140/partitions.bin \
            0xe000 /home/runner/.platformio/packages/framework-arduinoespressif32/tools/partitions/boot_app0.bin \
            0x10000 .pio/build/OpenPPG-CESP32S3-CAN-SP140/firmware.bin
      - name: Archive ESP32S3 Firmware
        uses: actions/upload-artifact@v4
        with:
          name: OpenPPG-CESP32S3-CAN-SP140-firmware
          path: .pio/build/OpenPPG-CESP32S3-CAN-SP140/full-controller-firmware.bin
